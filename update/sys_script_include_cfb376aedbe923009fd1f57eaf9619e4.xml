<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_udg_q.ObjectiuUtils</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>ObjectiuUtils</name>
        <script><![CDATA[var ObjectiuUtils = Class.create();
ObjectiuUtils.prototype = {
    initialize: function(objectiu) {
        //sys_id de l'objectiu
        if (objectiu) this._objectiu = objectiu;
    },

    actualitzaExecucio: function() {

        //new x_udg_q.log("ObjectiuUtils.actualitzaExecucio per sys_id: " + this._objectiu);
        var grObjectiu = new GlideRecord('x_udg_q_objectiumillora');
        grObjectiu.get(this._objectiu);
        grObjectiu.accions = this.getAccions(this._objectiu);
        grObjectiu.assoliment = this.getExecucio(this._objectiu);
        grObjectiu.update();
    },

    actualitzaPercentatgeAccions: function() {

        var ponderacions = 0;
        var ga = new GlideRecord('x_udg_q_m2m_accions_objectius');
        ga.addQuery('objectiu_millora', this._objectiu);
        ga.addEncodedQuery('accio_millora.state!=-5'); //Les accions en Draft no compten
        ga.query();
        while (ga.next()) {
            ponderacions += ga.contribucio;
        }

        var grM2m = new GlideRecord('x_udg_q_m2m_accions_objectius');
        grM2m.addQuery('objectiu_millora', this._objectiu);
        grM2m.addEncodedQuery('accio_millora.state!=-5'); //Les accions en Draft no compten
        grM2m.query();
        while (grM2m.next()) {
            if (ponderacions > 0) {
                grM2m.percentatge = grM2m.contribucio / ponderacions * 100;
                grM2m.update();
            }
        }
    },

    getAccions: function(objectiu_id) { //Retorna el nombre d'accions que depenen de l'objectiu (sense esborranys)

        var accions = 0;
        var grM2m = new GlideRecord('x_udg_q_m2m_accions_objectius');
        grM2m.addQuery('objectiu_millora', objectiu_id);
        grM2m.addQuery("accio_millora.state!=-5"); //Les accions en Draft no compten
        grM2m.query();
        if (grM2m.next()) {
            accions = grM2m.getRowCount();
        }
        //new x_udg_q.log("ObjectiuUtils.getAccions " + objectiu_id + " accions= " + accions);
        return accions;
    },

    getExecucio: function(objectiu_id) {

        //Retorna l'assoliment d'un objectiu a partir de totes les accions que hi contribueixen
        var grObjectiu = new GlideRecord('x_udg_q_objectiumillora');
        grObjectiu.get(objectiu_id);

        if (grObjectiu.state == -5) return 0;
        //if (grObjectiu.state == 3) return grObjectiu.assoliment; Això impedia actualitzar els objectius tancats
        var assoliment = 0;
        var acumulat = 0;
        var ponderacions = 0;
        var grM2m = new GlideRecord('x_udg_q_m2m_accions_objectius');
        grM2m.addQuery('objectiu_millora', grObjectiu.sys_id);
        grM2m.addEncodedQuery("accio_millora.state!=-5"); //Les accions en Draft no compten
        grM2m.query();
        while (grM2m.next()) { //Per cada action
            if (grM2m.contribucio > 0 && grM2m.accio_millora.state != -5) { //L'accio ha de contribució>0 i no ser esborrany
                ponderacions += grM2m.contribucio;
                acumulat += (grM2m.accio_millora.percentatge * grM2m.contribucio);
            }
        }
        if (ponderacions > 0) assoliment = acumulat / ponderacions;
        //return assoliment;
        return Math.floor(assoliment); //El nombre enter sense decimals
    },

    responsableObjectiuDefecte: function() {

        var SGQpref = gs.getUser().getPreference('qualitat.sgqActual');
        var gr = new GlideRecord('x_udg_q_sgq');
        gr.get("sys_id=" + SGQpref);
        return gr.responsable;
    },

    setAllResponsables: function(funcio) {
        var gr = new GlideRecord('x_udg_q_objectiumillora');
        gr.addQuery('funcio', funcio);
        gr.addQuery('state=-5'); //No s'actualitzen Esborranys
        grObj.query();
        new x_udg_q.log(funcio.sgq.codi + " ObjectiuUtils.setAllResponsables busca objectius amb responsable: " + funcio.nom);
        while (gr.next()) {
            new x_udg_q.log(gr.number + " ObjectiuUtils.setAllResponsables actualitza (" + funcio.nom + ") " + gr.assigned_to.name + " -> " + funcio.usuari.name);
            grObj.assigned_to = funcio.usuari;
            grObj.update();
        }
    },

    getRtfperSubestandard: function(sysidSubestandard, filtre, status, sgq, grPlantilla) {
        //gs.addInfoMessage("getRtfperSubestandard: "+sysidSubestandard+ " f: "+filtre+ " s: "+ status + " sgq: "+sgq);
        //inner function

        /*function textestatA(estat) {
            if (estat == -5) return "Esborrany";
            if (estat == 2) return "En curs";
            return "Tancada";
        }*/

        function sgqSiNoActual(x) {
            var text = "";
            if (x.sgq != sgq) text = " (" + x.sgq.getDisplayValue() + ")";
            return text;
        }
        //new x_udg_q.log("Generant detall informe per " + sgq + " per l'estandard " + sysidSubestandard);
        var col = [7600, 9100, 9700];
        var grObj = new GlideRecord('x_udg_q_objectiumillora');
        var r = new rtf("");
        var filtreplus = "subestandard=" + sysidSubestandard + "^state=" + status;
        if (filtre && filtre != '') filtreplus += "^" + filtre;
        grObj.addEncodedQuery(filtreplus);
        grObj.orderBy('number');
        grObj.query();
        if (grObj.hasNext() && status == 2) r.add("Objectius vigents al pla de millora:\\par\\par");
        if (grObj.hasNext() && status == 3) r.add("Objectius tancats en el període:\\par\\par");
        while (grObj.next()) {
            r.tablestart();
            r.rowstart(col, 36);
            r.add(" \\b " + grObj.number + " \\b0");
            r.add(sgqSiNoActual(grObj));
            r.add(" - " + grObj.short_description + "\\intbl\\ql").cellend();
            if (grObj.state == 2) r.add("En curs");
            else r.add(grObj.tancament.getDisplayValue());

            r.add("\\intbl\\ql").cellend();
            r.add(parseInt(grObj.assoliment) + "%\\intbl\\qr"); //  \qr alinea a dreta
            r.cellend().rowend();

            if (grPlantilla.longDescription && grObj.description != '') {
                r.rowstart([col[2]])
                    .add('{\\b Descripció llarga: \\b0')
                    .add(grObj.description.toString().replace("\n", " \\ql\\par "))
                    .add("}\\intbl\\ql")
                    .cellend().rowend();
            }

            if (grPlantilla.diagnostic && grObj.diagnostic != '') {
                r.rowstart([col[2]])
                    .add('{\\b Diagnòstic: \\b0')
                    .add(grObj.diagnostic.toString().replace("\n", " \\ql\\par "))
                    .add("}\\intbl\\ql")
                    .cellend().rowend();
            }

            var venciment = new GlideDateTime();
            venciment.setYearLocalTime(venciment.getYearLocalTime() - 1); // venciment fa un any
            var valorat = new GlideDateTime(grObj.valorat);

            if (grObj.getValue('declarat') < venciment || grObj.valoracio != '') {
                r.rowstart([col[2]]); //comença filera de valoració
                if (grObj.valoracio != '') {
                    if (valorat > venciment || grObj.state == 3) r.add('{\\b Valoració: \\b0');
                    else r.add("{\\cf6 Valoració vençuda: ");
                    r.add(grObj.valoracio.replace("\n", " \\ql\\par ")); //Per incloure els retorns de linia
                } else r.add("{\\cf6 Manca Valoració");
                r.add("}\\intbl\\ql")
                .cellend().rowend();
            }

            var grM2m = new GlideRecord('x_udg_q_m2m_accions_objectius');
            grM2m.addQuery('objectiu_millora', grObj.sys_id);
            grM2m.orderBy('order');
            grM2m.orderBy('accio_millora.number');
            grM2m.query();
            while (grM2m.next()) {
                if (grM2m.accio_millora.state != -5 && grM2m.accio_millora.number != '') { //cal assegurar que l'acció és accesible
                    r.rowstart(col)
                    .add(" \\b " + grM2m.accio_millora.number + " \\b0")
                    .add(sgqSiNoActual(grM2m.accio_millora))
                    .add(" - " + grM2m.accio_millora.short_description + "\\intbl\\ql").cellend()
                    .add(grM2m.accio_millora.state.getDisplayValue() + "\\intbl\\ql").cellend()
                    .add(parseInt(grM2m.accio_millora.percentatge) + "%\\intbl\\qr"); //  \qr alinea a dreta
                    r.cellend().rowend();
                }
            }
            if (grObj.modificacio_memoria) {
                r.rowstart([col[2]]);
                r.add("{Aquest objectiu implica modificació de la memòria}\\intbl\\ql");
                r.cellend().rowend();
            }
            r.tableend();
            r.add("\\par\n");
        }
        return r.getContent();
    },

    getRtfResumMillora: function(filtre, sgq) {

        function sgqSiNoActual(x) {
            var text = "";
            if (x.sgq != gs.getUser().getPreference('qualitat.sgqActual')) text = " (" + x.sgq.getDisplayValue() + ")";
            return text;
        }
        //new x_udg_q.log("Generant resum de l'informe per " + sgq);
        var r = new rtf("");
        var hiHaCanvisMemoria = false;
        var grObj = new GlideRecord('x_udg_q_objectiumillora');
        grObj.addEncodedQuery(filtre);
        grObj.orderBy('number');
        grObj.query();
        r.tablestart();
        while (grObj.next()) {
            var col = [0];
            var darreracol = 9800;
            if (grObj.state == 3) col = [8100, 9450];
            if (grObj.state == 2) col = [9450];
            col.push(darreracol);

            r.rowstart(col, 36);
            r.add("\\b " + grObj.number);
            if (grObj.modificacio_memoria) {
                r.add("*");
                hiHaCanvisMemoria = true;
            }
            r.add(" \\b0 " + sgqSiNoActual(grObj) + " - " + grObj.short_description + "\\ql").cellend();
            if (grObj.state == 3) r.add(grObj.tancament.getDisplayValue() + "\\ql").cellend();
            r.add(parseInt(grObj.assoliment) + "%\\qr").cellend();
            r.rowend();
        }
        if (hiHaCanvisMemoria) {
            r.rowstart([darreracol]);
            r.add("{* Objectius que impliquen canvis a les memòries}\\intbl\\ql").cellend();
            r.rowend();
        }
        r.tableend();
        return r.getContent();
    },

    sgqSiNoActual: function(x) {
        var text = "";
        if (x.sgq != gs.getUser().getPreference('qualitat.sgqActual')) text = " (" + x.sgq.getDisplayValue() + ")";
        return text;
    },

    getRtfMilloraComprimit: function(filtre, sgq) {

        var grObj = new GlideRecord('x_udg_q_objectiumillora');
        grObj.addEncodedQuery(filtre);
        grObj.orderBy('number');
        grObj.query();

        var r = new rtf("");
        r.tablestart();
        while (grObj.next()) {
            r.rowstart([9800], 27); //el segon número és un número del tema de la plantilla
            r.add("\\b " + grObj.number + "\\b0");
            r.add(this.sgqSiNoActual(grObj));
            r.add(" - " + grObj.short_description + "\\ql");
            r.cellend().rowend();

            r.rowstart([9800]);
            if (grObj.state == 2) {
                r.add("Responsable: " + grObj.getDisplayValue('responsable') + this.sgqSiNoActual(grObj)).nl();
                r.add("Prioritat: " + grObj.getDisplayValue('priority'));
                var data = grObj.getDisplayValue('due_date').split(' ')[0];
                if (!data) data = "{\\cf6 MANCA}";
                r.add(" - Data prevista: " + data);
            }

            if (grObj.state == 3) {
                r.add(grObj.getDisplayValue('tancament'));
            }
            r.cellend().rowend();

            var grM2m = new GlideRecord('x_udg_q_m2m_accions_objectius');
            grM2m.addQuery('objectiu_millora', grObj.sys_id);
            grM2m.orderBy('order');
            grM2m.orderBy('accio_millora.number');
            grM2m.query();

            while (grM2m.next()) {
                if (grM2m.accio_millora.state != -5 && grM2m.accio_millora.number != '') { //cal assegurar que l'acció és accesible
                    r.rowstart([9800]);
                    r.add("\\tab \\b " + grM2m.accio_millora.number + "\\b0");
                    r.add(" - " + grM2m.accio_millora.short_description + "\\ql");
                    r.cellend().rowend();
                }
            }
        }
        return r.tableend().getContent();
    },
    type: 'ObjectiuUtils'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>adminsanti</sys_created_by>
        <sys_created_on>2018-11-06 16:28:53</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>cfb376aedbe923009fd1f57eaf9619e4</sys_id>
        <sys_mod_count>514</sys_mod_count>
        <sys_name>ObjectiuUtils</sys_name>
        <sys_package display_value="UdG Qualitat" source="x_udg_q">29219b8737df5f001acdf01643990e33</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="UdG Qualitat">29219b8737df5f001acdf01643990e33</sys_scope>
        <sys_update_name>sys_script_include_cfb376aedbe923009fd1f57eaf9619e4</sys_update_name>
        <sys_updated_by>adminsanti</sys_updated_by>
        <sys_updated_on>2021-05-31 15:53:40</sys_updated_on>
    </sys_script_include>
</record_update>
